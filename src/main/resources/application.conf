app {

  # client auth variables
  authDomain=""
  authDomain=${?SERVICE_AUTH_DOMAIN}
  authClientId=""
  authClientId=${?SERVICE_AUTH_CLIENT_ID}
  authClientSecret=""
  authClientSecret=${?SERVICE_AUTH_CLIENT_SECRET}
  authIdentifier=""
  authIdentifier=${?SERVICE_AUTH_IDENTIFIER}
  maanaClientEndpoint=""
  maanaClientEndpoint=${?MAANA_CLIENT_ENDPOINT}
}


# connection detais if using H2 in memory database
#h2mem = {
#  url = "jdbc:h2:mem:howtographqldb"
#  driver = org.h2.Driver
#  connectionPool = disabled
#  keepAliveConnection = true
#}


akka {
  log-config-on-start = off
  loglevel = "INFO"
  http {
    server {
      log-unencrypted-network-bytes = 2048
      idle-timeout = 1200 s
      request-timeout = 600 s
      socket-options {
        so-receive-buffer-size = undefined
        so-send-buffer-size = undefined
        so-reuse-address = undefined
        so-traffic-class = undefined
        tcp-keep-alive = undefined
        tcp-oob-inline = undefined
        tcp-no-delay = undefined
      }



    },
    client {
      log-unencrypted-network-bytes = 2048
      connecting-timeout = 60s
      idle-timeout = infinite

      host-connection-pool {
        # The maximum number of parallel connections that a connection pool to a
        # single host endpoint is allowed to establish. Must be greater than zero.
        max-connections = 4

        # The minimum number of parallel connections that a pool should keep alive ("hot").
        # If the number of connections is falling below the given threshold, new ones are being spawned.
        # You can use this setting to build a hot pool of "always on" connections.
        # Default is 0, meaning there might be no active connection at given moment.
        # Keep in mind that `min-connections` should be smaller than `max-connections` or equal
        min-connections = 0

        # The maximum number of times failed requests are attempted again,
        # (if the request can be safely retried) before giving up and returning an error.
        # Set to zero to completely disable request retries.
        max-retries = 5

        # The maximum number of open requests accepted into the pool across all
        # materializations of any of its client flows.
        # Protects against (accidentally) overloading a single pool with too many client flow materializations.
        # Note that with N concurrent materializations the max number of open request in the pool
        # will never exceed N * max-connections * pipelining-limit.
        # Must be a power of 2 and > 0!
        max-open-requests = 32
      }
    }
  }
}